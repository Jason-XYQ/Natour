@charset "UTF-8";
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box-sizing 属性本身不会被继承  属性值设为inherit 强制继承 */
  box-sizing: inherit; }

html {
  /* 100% * 10/16           一般100%就是16px  但是我们只要其中的10px*/
  font-size: 62.56%; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  /* padding: 30px; */
  padding: 1.5rem;
  box-sizing: border-box; }

.header {
  height: 95vh;
  /* 颜色线性渐变 */
  /* 插入背景图片 */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  /* 网页缩放时候 顶部TOP不会被缩小 */
  background-position: top;
  position: relative;
  /* 剪切路径 polygon是可视的多边形  每个点都用x y表示   75vh表示75%的视口高度 */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }

.logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem; }

.logo {
  height: 3.5rem; }

/* .logo:hover {
  animation: moveInRight 1s ease-out;
} */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* 将文本盒子居中 */
  transform: translate(-50%, -50%);
  /* 按钮的 文字居中 */
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* BUG解决动画抖动 */
  backface-visibility: hidden;
  margin-bottom: 60px; }

.heading-primary-main {
  /* span是inline元素 */
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  /* 启用动画只需要两个 名字和时间 */
  animation-name: moveInLeft;
  animation-duration: 1s;
  /* 先慢后快 */
  animation-timing-function: ease-out;
  /* animation-delay: 3s;
  animation-iteration-count: 3; */ }

.heading-primary-sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  /* 简写 */
  animation: moveInRight 1s ease-out; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    /* 平移  x轴方向从左到右 */
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

/* .btn:link,
.btn:visited , */
.btn {
  text-transform: uppercase;
  text-decoration: none;
  /* a是个内联元素 要设置宽高或者边距都需要使其转换为行内块元素  他被视为文本text */
  display: inline-block;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  /* 实现悬停动画效果 */
  /* 过渡--所有属性发生变化都会发生0.2s的动画效果 */
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  /* 按钮向上漂移一点 */
  transform: translateY(-0.3rem);
  /* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影颜色以及透明度 */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  /* 按钮向上漂移一点 */
  /* 由于计算都是相对最原始状态的 悬停上移3px 点击上移1px 就会有的点击下移的效果 */
  transform: translateY(-1px);
  /* x偏移量 | y偏移量 | 阴影模糊半径 | 阴影颜色以及透明度 */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn-white {
  background-color: #fff;
  color: #777; }

/* 就像是btn的孩子元素 */
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  /* 相对于按钮定位 */
  top: 0;
  left: 0;
  /* 确保伪元素在按钮底下（背后） */
  z-index: -1;
  /* 过渡效果 */
  transition: all 0.4s; }

.btn-white::after {
  background-color: #fff; }

/* 按钮悬停状态下的伪元素 */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  /* 原始状态默认为1 */
  opacity: 0; }

.btn-animation {
  /* 延迟0.75s */
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* 动画在延时期间就已经启动了动画 应用开始帧的样式 */
  animation-fill-mode: backwards; }
